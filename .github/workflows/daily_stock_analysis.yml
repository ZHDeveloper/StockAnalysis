name: Daily Stock Analysis

on:
  schedule:
    - cron: '30 1 * * *'  # UTC时间1:30，对应北京时间9:30
  workflow_dispatch:  # 允许手动触发

jobs:
  analyze:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run analysis
      run: python main.py
    
    - name: Get current date
      id: date
      run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: stock-analysis-${{ steps.date.outputs.date }}
        release_name: Stock Analysis Report ${{ steps.date.outputs.date }}
        draft: false
        prerelease: false
    
    - name: Get file lists
      id: files
      run: |
        echo "logs=$(ls -1 logs/)" >> $GITHUB_OUTPUT
        echo "stocks=$(ls -1 stocks/)" >> $GITHUB_OUTPUT
    
    outputs:
      create_release: ${{ steps.create_release.outputs }}
      files: ${{ steps.files.outputs }}

  upload-logs:
    needs: analyze
    runs-on: ubuntu-latest
    strategy:
      matrix:
        file: ${{ fromJson(needs.analyze.outputs.files.logs) }}
    
    steps:
    - uses: actions/checkout@v3
    - name: Upload Log Files
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ fromJson(needs.analyze.outputs.create_release).upload_url }}
        asset_path: ./logs/${{ matrix.file }}
        asset_name: ${{ matrix.file }}
        asset_content_type: text/plain

  upload-stocks:
    needs: analyze
    runs-on: ubuntu-latest
    strategy:
      matrix:
        file: ${{ fromJson(needs.analyze.outputs.files.stocks) }}
    
    steps:
    - uses: actions/checkout@v3
    - name: Upload Stock Files
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ fromJson(needs.analyze.outputs.create_release).upload_url }}
        asset_path: ./stocks/${{ matrix.file }}
        asset_name: ${{ matrix.file }}
        asset_content_type: text/plain
      strategy:
        matrix:
          file: ${{ steps.files.outputs.stocks }}